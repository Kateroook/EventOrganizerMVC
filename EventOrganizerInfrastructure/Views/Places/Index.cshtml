@model IEnumerable<EventOrganizerDomain.Model.Place>

@{
    ViewData["Title"] = "Місця у місті " + ViewBag.CityName;
}

<h1 class="block-header">Місця у місті @ViewBag.CityName</h1>

<div class="row row-cols-1 row-cols-md-3 g-3">
    @foreach (var place in Model)
    {
        <div class="col">
            <div class="card place-card"
                data-coordinates="@place.CoordinatesCol2"
                data-geometry-type="@place.CoordinatesCol1?.GeometryType" 
                data-name="@place.Name">
                       
                @if (!string.IsNullOrEmpty(place.ImageUrl))
                {
                    <img src="@place.ImageUrl" class="card-img-top" alt="Постер події">

                }
                <div class="card-body">
                    <h5 class="card-title">@place.Name</h5>
                    <p class="card-text event-place">@place.Address</p>
                    <p class="card-text">@place.Events.Count() подій</p>
                </div>
                <div class="card-bottom card-buttons">
                    <a asp-action="Details" asp-route-id="@place.Id" class="btn btn-primary btn-details">Про місце</a>
                </div>
            </div>
        </div>
    }
</div>

<!--Карта-->
<div class="row">
    <div class="container content" id="map" style="height: 400px;"></div>
</div>

<h3 class="block-header">Популярні події у місті @ViewBag.CityName</h3>

<div class="row row-cols-1 row-cols-md-4 g-3">
    @foreach (var e in ViewBag.PopularEventsInCity)
    {
        <div class="col">
            <div class="card event-card">

                @if (!string.IsNullOrEmpty(@e.PictureUrl))
                {
                    <img src="@e.PictureUrl" class="card-img-top" alt="Постер події">

                }
                else
                {
                    <img src="https://www.tlbx.app/200.svg" class="card-img-top" alt="Постер події">

                }
                <div class="card-body d-flex flex-column justify-content-between">

                    <div class="card-text align-items-top">
                        <p class="card-text mt-50"><span class="event-date">@e.DateTimeStart.ToString("dd MMMM, HH:mm, ddd")</span></p>
                        <h5 class="card-title">@e.Title</h5>
                    </div>

                    <div class="card-text align-items-end">
                        <p class="card-text mt-auto mb-15">
                            <span class="event-place">@e.Place.Name</span>
                        </p>
                        <p class="card-text  event-price">
                            @if (@e.Price != 0)
                            {
                                <strong>від @e.Price₴</strong>
                            }
                            else
                            {
                                <strong>FREE</strong>
                            }
                        </p>
                    </div>
                </div>
                <div class="card-bottom card-buttons">
                    <a asp-controller="Events" asp-action="Details" asp-route-id="@e.Id" class="btn btn-primary btn-details">Деталі</a>
                    @if (User.Identity.IsAuthenticated && User.IsInRole("Moderator"))
                    {
                        <a asp-controller="Events" asp-action="Delete" asp-route-id="@e.Id" class="btn btn-secondary btn-delete">Видалити</a>
                    }
                </div>
            </div>
        </div>
    }
</div>


<div class="popular-cities">
    <h3 class="block-header">Популярні міста</h3>
    <ul class="popular-cities-list">
        @foreach (var city in ViewBag.PopularCities)
        {
            <li>
                <a href="@Url.Action("Index", "Places", new { id = city.Id })">@city.Name</a>
            </li>
        }
    </ul>
    <a asp-controller="Cities" asp-action="Index" class="btn">Показати всі міста</a>
</div>


@section scripts {
    <!-- Leaflet.js -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <!-- Карта -->
    <script>
        var map = L.map('map').setView([50.4501, 30.5234], 13);

        // OpenStreetMap
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        var places = document.querySelectorAll('.place-card');

        places.forEach(function (placeElement) {
            var coordinatesString = placeElement.getAttribute('data-coordinates');
            var geometryType = placeElement.getAttribute('data-geometry-type');
            var placeName = placeElement.getAttribute('data-name');

            console.log(`Coordinates: ${coordinatesString}, GeometryType: ${geometryType}, PlaceName: ${placeName}`);

            // Проверяем наличие координат
            if (!coordinatesString) {
                console.log('Coordinates not provided');
                return;
            }

            // Проверяем тип геометрии
            if (geometryType == 'Point') {
                var coordinates = coordinatesString.match(/\d+\.\d+/g);
                if (!coordinates || coordinates.length < 2) {
                    console.log('Invalid Point coordinates format');
                    return;
                }

                var lat = parseFloat(coordinates[1]);
                var lng = parseFloat(coordinates[0]);

                L.marker([lat, lng]).addTo(map)
                    .bindPopup(placeName);

                map.setView([lat, lng], 13);

            }
            if (geometryType == 'Polygon') {
                var coordinatesArray = coordinatesString.match(/\d+\.\d+/g);
                if (!coordinatesArray || coordinatesArray.length < 6) {
                    console.log('Invalid Polygon coordinates format');
                    return;
                }

                var polygonPoints = [];

                for (var i = 0; i < coordinatesArray.length; i += 2) {
                    var lat = parseFloat(coordinatesArray[i]);
                    var lng = parseFloat(coordinatesArray[i + 1]);
                    polygonPoints.push([lat, lng]);
                }

                L.polygon([polygonPoints]).addTo(map)
                    .bindPopup(placeName);

                var bounds = L.polygon([polygonPoints]).getBounds();
                map.fitBounds(bounds);
            }
        });
    </script>

}